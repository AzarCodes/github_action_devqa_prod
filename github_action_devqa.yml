name: CI/CD Pipeline

on:
  push:
    branches: ["UAT", "DEV-NEW"]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate and validate .env file
        run: |
          cat << EOF > .env
          HOST=${{ secrets.DEV_HOST }}
          PROTOCOL=HTTPS
          PORT=4001
          DATABASE=${{ secrets.DEV_DATABASE }}
          MONGO_PARENT_URI=${{ secrets.DEV_MONGO_PARENT_URI }}
          MONGO_URI=${{ secrets.DEV_MONGO_URI }}
          SECRET=${{ secrets.DEV_SECRET }}
          EMAIL=${{ secrets.DEV_EMAIL }}
          NAME=${{ secrets.DEV_NAME }}
          REMAIL=${{ secrets.DEV_REMAIL }}
          APPROVAL_EMAIL=${{ secrets.DEV_APPROVAL_EMAIL }}
          OPENAI_API_KEY=${{ secrets.DEV_OPENAI_API_KEY }}
          APPROVER_MAIL=${{ secrets.DEV_APPROVER_MAIL }}
          RAZORPAY_KEY_ID=${{ secrets.DEV_RAZORPAY_KEY_ID }}
          RAZORPAY_KEY_SECRET=${{ secrets.DEV_RAZORPAY_KEY_SECRET }}
          PLAN_ID=${{ secrets.DEV_PLAN_ID }}
          SENDGRID_KEY=${{ secrets.DEV_SENDGRID_KEY }}
          SALESFORCE_AUTH_URL=${{ secrets.DEV_SALESFORCE_AUTH_URL }}
          SALESFORCE_TOKEN_URL=${{ secrets.DEV_SALESFORCE_TOKEN_URL }}
          SALESFORCE_REDIRECT_URI=${{ secrets.DEV_SALESFORCE_REDIRECT_URI }}
          ENCRYPTION_KEY=${{ secrets.DEV_ENCRYPTION_KEY }}
          CRYPTO_KEY=${{ secrets.DEV_CRYPTO_KEY }}
          AWS_ACCESS_KEY_ID=${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY=${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION=${{ secrets.DEV_AWS_REGION }}
          AWS_S3_BUCKET_NAME=${{ secrets.DEV_AWS_S3_BUCKET_NAME }}
          LOGIN_URL=${{ secrets.DEV_LOGIN_URL }}
          EOF
          # Validate required variables
          required_vars=("HOST" "DATABASE" "MONGO_PARENT_URI" "MONGO_URI" "SECRET" "EMAIL" "NAME" "REMAIL" "APPROVAL_EMAIL" "OPENAI_API_KEY" "APPROVER_MAIL" "RAZORPAY_KEY_ID" "RAZORPAY_KEY_SECRET" "PLAN_ID" "SENDGRID_KEY" "SALESFORCE_AUTH_URL" "SALESFORCE_TOKEN_URL" "SALESFORCE_REDIRECT_URI" "ENCRYPTION_KEY" "CRYPTO_KEY" "AWS_ACCESS_KEY_ID" "AWS_SECRET_ACCESS_KEY" "AWS_REGION" "AWS_S3_BUCKET_NAME" "LOGIN_URL")
          for var in "${required_vars[@]}"; do
            if ! grep -q "^$var=" .env || grep -q "^$var=$" .env; then
              echo "Error: Missing or empty value for $var"
              exit 1
            fi
          done

      - name: Secure .env file
        run: chmod 600 .env

      - name: Deploy with PM2
        run: |
          pm2_app_name=$([[ "${{ github.ref_name }}" = "DEV-NEW" ]] && echo "dddevnew" || echo "ddprod")
          pm2 start server.js --name $pm2_app_name || pm2 reload $pm2_app_name

      - name: Clean up on failure
        if: failure()
        run: pm2 delete all || true